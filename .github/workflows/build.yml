name: Build

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:

env:
  MAJOR_VERSION: 0

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        variant: [apache, fpm, fpm-alpine]
        arch: [amd64, 386]      

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '1'
          submodules: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.MAJOR_VERSION }}/${{ matrix.variant }}
          file: ${{ env.MAJOR_VERSION }}/${{ matrix.variant }}/Dockerfile
          push: false
          load: true
          platforms: linux/${{ matrix.arch }}
          tags: officelife:${{ matrix.variant }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Test image
        run: test/run.sh officelife:${{ matrix.variant }}

      - name: Login to GitHub container registry
        uses: docker/login-action@v1
        if: github.ref == 'refs/heads/main' && matrix.arch != '386'
        with:
          registry: ghcr.io
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_PAT }}

      - name: Get version
        id: version
        if: github.ref == 'refs/heads/main' && matrix.arch != 'i386'
        run: echo "::set-output name=version::$(cat $MAJOR_VERSION/version)"

      - name: Docker push
        if: github.ref == 'refs/heads/main' && matrix.arch != '386'
        run: |
          for version in ${{ matrix.variant }} ${{ steps.version.outputs.version }}-${{ matrix.variant }}; do
            docker tag officelife:${{ matrix.variant }} ghcr.io/officelifehq/officelife-dev:$version
            docker push ghcr.io/officelifehq/officelife-dev:$version
          done

#  test:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Test update script
#      run: |
#        hash_before=$(git write-tree)
#        ./update.sh
#        bash -c "[[ $hash_before = $(git add -A && git write-tree) ]]"
